/**
*      style.css
*
*      Name:       <Aaron Meek>
*      Student ID: <121258164>
*      Date:       <12/04/2022>
*/

/* add some fronts from google fonts */
@import url("https://fonts.googleapis.com/css2?family=Hubballi&family=Roboto+Mono:wght@500&family=Roboto+Slab:wght@500&display=swap");

* {
  box-sizing: border-box;
}

/* standard, commonly used, styles*/
body {
  padding: 1em;
  font-family: "Roboto Slab", serif;
  background-color: #191a19;
  color: #e7fbbe;
}

/* replicates an OS window/widget - most divs will have this style */
.container {
  margin-top: 3em;
  margin-left: 5em;
  margin-right: auto;
  width: 85%;
  padding: 0.5em;
  border: 0.3em solid #222831;
  border-radius: 0.5em;
  background-color: #393e46;
}

/* define a css style to create a mock-modol */
.mock-modol {
  margin-top: 1em;
  margin-bottom: 1em;
  margin-left: 2em;
  margin-right: 2em;
  min-height: 6em;
  box-shadow: -0.5em 0.5em #222831;
  border: 0.3em solid #222831;
}

img {
  display: block;
  margin: auto;
  width: 20%;
  min-width: 8em;
  height: calc(width);
  min-height: 8em;
  border-radius: 1em;
  border: 0.25em solid #e7fbbe;
}

/* remove list styles */
li {
  list-style: none;
}

/* styles tables */
.styled-table {
  border-collapse: collapse;
  margin: auto;
  margin-bottom: 2%;
}

/* anchors will have a style defined by me */
a {
  text-decoration: none;
}

/* define a style for anchors, input submit,  and input reset buttons */
a,
input[type="submit"],
input[type="reset"] {
  background-color: transparent;
  color: #d9d7f1;
  /* font-size: large;*/
  font-family: "Roboto Slab", serif;
}

/* buttons will be standardized with this style */
.std-buttons {
  text-align: center;
  margin: auto;
  height: fit-content;
  width: fit-content;
  background-color: transparent;
  border: 0;
  text-align: center;
  padding: 2em;
}

/* change the colour of definition elements */
dfn {
  color: #d9d7f1;
}

/************************************************************/

/* minute details used often */

/* the following elements will be prefixed or suffixed with characters to simulate a terminal */
h2::after {
  content: ":~$";
  color: #fffdde;
}

h3::before {
  content: "> ";
  font-size: x-large;
  color: #d9d7f1;
}

/* have a class for the mock-flashing-cursor */
#curs-on {
  color: #d9d7f1;
  font-size: xx-large;
}

li::before {
  content: "~ ";
  color: #d9d7f1;
}

a::before {
  content: "<-";
  color: #ffcbcb;
}

a::after {
  content: "->";
  color: #ffcbcb;
}
/*******************/

.large {
  font-size: large;
}

/* creates a circle to emulate window border buttons */
.circ {
  height: 1.5em;
  width: 1.5em;
  margin: 1em 0 0 1em;
  background-color: #ffcbcb;
  border-radius: 50%;
  display: inline-block;
}

/* creates a background colour for the window boarder circle buttons */
.back-b {
  background-color: #d9d7f1;
}
.back-y {
  background-color: #e7fbbe;
}

/* restrict a div/mock-modol to this height */
.restrict-h {
  max-height: 400px;
}

/* restrict a div/mock-modol to the width of its elements */
.restrict-w {
  max-width: fit-content;
}

/* adds specific margins to create a single strip (long) modol  */
.slice-modol {
  margin: 2.5% auto 2.5% auto;
}

/* create a style for my elemet text wrapper, r and b, for having specific colours to emulate terminal command responses */
r {
  color: #ffcbcb;
}

b {
  color: #d9d7f1;
}

/* a generic fit class */
.fit {
  margin-left: auto;
  margin-right: auto;
}

.center-text {
  text-align: center;
}

.tab {
  margin-left: 5%;
}
/************************************************************/

/* for collumns and rows of elements */
.row {
  display: flex;
}

.single-collumn {
  display: flexbox;
}

.column {
  flex: 50%;
}
/************************************************************/

/* specify a generic form layout */
form {
  /* apply some space around our form, and add a border */
  margin-top: 3em;

  /**
  * specify a max-width, so it doesn't expand beyond a desired width,
  * and have the margin use the rest
  */
  max-width: 650px;
  min-width: 400px;
  margin-left: auto;
  margin-right: auto;

  /**
  * specify a grid with 2 columns, focusing most of
  * the width in the second
  */
  display: grid;
  grid-template-columns: 0.3fr 1fr;

  /**
  * specify all elements within the grid to be centered
  * and add 20px of a gap between each row and column
  */
  align-items: center;
  grid-gap: 20px;
}

/**
* style the input controls, as well as the textarea so they are full width in their
* cell.
*
* apply a matching background, text colour, and tyoe-face size.
*/
input,
textarea {
  width: 100%;
  padding: 0.3em;
  font-size: 1.5em;
  background-color: #222831;
  border: 0.125em solid #e7fbbe;
  border-radius: 0.25em;
  color: #e7fbbe;
  resize: none;
}

/**
* apply a pseudo-outline for the inputs and texareas that have the focus.
* this will not use the outline atrtibute, i.e.: pseudo-outline
*/
input:focus,
textarea:focus {
  border: 0.125em solid #ffcbcb;
  outline: none;
}

/* apply hover and focus styles to our anchor and input buttons */
a:hover,
input[type="submit"]:hover,
input[type="submit"]:focus,
input[type="reset"]:hover,
input[type="reset"]:focus {
  background-color: transparent;
  color: #e7fbbe;
}

/* fix the width of the textarea to the width of its collumn */
textarea {
  grid-column: 1/3;
}

/* move the buttons to the right side of the right column */
.form-buttons {
  grid-column: 2/3;
  text-align: center;
  margin-left: auto;
  width: 10em;
}

/**
* specify no extra height/width to the radio class,
* and add padding to push it further from the right of the collumn
*/
.rad {
  padding-right: 55%;
  display: inline;
  max-width: fit-content;
  max-height: fit-content;
}
